<?xml version='1.0' encoding='UTF-8'?>

<reference anchor='I-D.filsfils-spring-segment-routing'>
<front>
<title>Segment Routing Architecture</title>

<author initials='C' surname='Filsfils' fullname='Clarence Filsfils'>
    <organization />
</author>

<author initials='S' surname='Previdi' fullname='Stefano Previdi'>
    <organization />
</author>

<author initials='A' surname='Bashandy' fullname='Ahmed Bashandy'>
    <organization />
</author>

<author initials='B' surname='Decraene' fullname='Bruno Decraene'>
    <organization />
</author>

<author initials='S' surname='Litkowski' fullname='Stephane Litkowski'>
    <organization />
</author>

<author initials='M' surname='Horneffer' fullname='Martin Horneffer'>
    <organization />
</author>

<author initials='I' surname='Milojevic' fullname='Igor Milojevic'>
    <organization />
</author>

<author initials='R' surname='Shakir' fullname='Rob Shakir'>
    <organization />
</author>

<author initials='S' surname='Ytti' fullname='Saku Ytti'>
    <organization />
</author>

<author initials='W' surname='Henderickx' fullname='Wim Henderickx'>
    <organization />
</author>

<author initials='J' surname='Tantsura' fullname='Jeff Tantsura'>
    <organization />
</author>

<author initials='E' surname='Crabbe' fullname='Edward Crabbe'>
    <organization />
</author>

<date month='May' day='13' year='2014' />

<abstract><t>Segment Routing (SR) leverages the source routing paradigm.  A node steers a packet through an ordered list of instructions, called segments.  A segment can represent any instruction, topological or service-based.  A segment can have a local semantic to an SR node or global within an SR domain.  SR allows to enforce a flow through any topological path and service chain while maintaining per-flow state only at the ingress node to the SR domain.  Segment Routing can be directly applied to the MPLS architecture with no change on the forwarding plane.  A segment is encoded as an MPLS label.  An ordered list of segments is encoded as a stack of labels. The segment to process is on the top of the stack.  Upon completion of a segment, the related label is popped from the stack.  Segment Routing can be applied to the IPv6 architecture, with a new type of routing extension header.  A segment is encoded as an IPv6 address.  An ordered list of segments is encoded as an ordered list of IPv6 addresses in the routing extension header.  The segment to process is indicated by a pointer in the routing extension header. Upon completion of a segment, the pointer is incremented.</t></abstract>

</front>

<seriesInfo name='Internet-Draft' value='draft-filsfils-spring-segment-routing-01' />
<format type='TXT'
        target='http://www.ietf.org/internet-drafts/draft-filsfils-spring-segment-routing-01.txt' />
</reference>
