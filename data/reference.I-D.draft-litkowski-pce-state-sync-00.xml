<?xml version='1.0' encoding='UTF-8'?>

<reference anchor='I-D.litkowski-pce-state-sync'>
<front>
<title>Enhancing redundant stateful PCE architecture to support LSP association constraint based computation</title>

<author initials='S' surname='Litkowski' fullname='Stephane Litkowski'>
    <organization />
</author>

<author initials='S' surname='Sivabalan' fullname='Siva Sivabalan'>
    <organization />
</author>

<date month='October' day='26' year='2016' />

<abstract><t>[I-D.ietf-pce-stateful-pce] defines stateful extensions for Path Computation Element Communication Protocol (PCEP).  A Path Computation Client (PCC) can synchronize an LSP state information to a Path Computation Element (PCE).  [I-D.ietf-pce-stateful-pce] allows for PCE redundancy where a PCC can have redundant PCEP sessions towards multiple PCEs.  In such a case, a PCC gives control on a LSP to only a single PCE, and only one PCE is responsible for path computation for this delegated LSP.  There are some use cases where path computation for a particular LSP is linked to another: the most common use case is path disjointness.  The set of LSPs that are dependant to each other may start from different head-ends.  In such a case, we cannot guarantee that at any time all the head-ends (acting as PCCs) will delegate their LSP to the same PCE.  This scenario where a group of dependant LSPs are delegated to multiple PCEs is called a split-brain scenario.  This split-brain scenario may lead to computation loops between PCEs.  This document proposes a solution to enhance redundant stateful PCE architecture to overcome those issues.</t></abstract>

</front>

<seriesInfo name='Internet-Draft' value='draft-litkowski-pce-state-sync-00' />
<format type='TXT'
        target='http://www.ietf.org/internet-drafts/draft-litkowski-pce-state-sync-00.txt' />
</reference>
