<?xml version='1.0' encoding='UTF-8'?>

<reference anchor='I-D.slevinski-formal-signwriting'>
<front>
<title>Formal SignWriting</title>

<author initials='S' surname='Slevinski' fullname='Stephen Slevinski'>
    <organization />
</author>

<date month='October' day='4' year='2016' />

<abstract><t>Sutton SignWriting is the universal and complete solution for written sign language.  It has been applied by a wide and deep international community of sign language users.  Sutton SignWriting is an international standard for writing sign languages by hand or with computers.  From education to research, from entertainment to religion, SignWriting has proven useful because people are using it to write signed languages.  Formal SignWriting (FSW) is a faithful character-encoding of Sutton SignWriting based on 2-dimensional mathematics.  FSW defines a formal language for written sign languages where any sign of any sign language can be written as a string of ASCII characters.  The mathematical names are explained with tokens and regular expression patterns.  Symbol keys reference the Sutton SignWriting Characters. Coordinates are used for 2-dimensional placement.  Signs are written in a spatial SignBox, where each symbol is positioned with a 2-dimension coordinate.  For sorting, each sign can have an optional temporal sequence of symbols that is outside of the SignBox.  To create sentences, signs are written sequentially, interspersed with punctuation symbols.  The styling string of Formal SignWriting uses a lite markup to define a variety of styling options.  The entire sign can be customized for padding, coloring, and size.  Individual symbols within a sign can be customized for coloring and size.  For SVG, class names and IDs can be defined.  The query language of Formal SignWriting uses a lite markup, similar to FSW, to define a variety of searching possibilities.  The spatial SignBox can be searched for symbols or ranges of symbols.  For each symbol or range, the search can specify if the symbol only needs to be found somewhere in the SignBox, or if the symbol needs to be found near certain coordinates.  The temporal sequence can be searched for starting symbols, written as a sequential list of symbols and ranges of symbols.  When searching the temporal sequence, the search results will be limited to signs that start with a matching temporal sequence.  Each query string is transformed into one or more regular expressions.  The regular expressions are used to quickly search large amounts of data.  Formal SignWriting has been specifically designed to integrate with standard browser technology.  Four main components make this integration possible: 1) Font Technology, 2) Scalar Vector Graphics, 3) HTML and CSS, and 4) a JavaScript Library.  Formal SignWriting is ASCII based, so it is compatible with and optimized for UTF-8.  A Unicode character design is proposed that is isomorphic to Formal SignWriting.  This memo defines a conceptual character encoding map for the Internet community.  It is published for reference, examination, implementation, and evaluation.  Distribution of this memo is unlimited.</t></abstract>

</front>

<seriesInfo name='Internet-Draft' value='draft-slevinski-formal-signwriting-00' />
<format type='TXT'
        target='http://www.ietf.org/internet-drafts/draft-slevinski-formal-signwriting-00.txt' />
</reference>
