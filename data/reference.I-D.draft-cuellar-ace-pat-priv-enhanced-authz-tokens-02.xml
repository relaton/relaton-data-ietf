<?xml version='1.0' encoding='UTF-8'?>

<reference anchor='I-D.cuellar-ace-pat-priv-enhanced-authz-tokens'>
<front>
<title>Privacy-Enhanced Tokens for Authorization in ACE</title>

<author initials='J' surname='Cuellar' fullname='Jorge Cuellar'>
    <organization />
</author>

<author initials='P' surname='Kasinathan' fullname='Prabhakaran Kasinathan'>
    <organization />
</author>

<author initials='D' surname='Calvo' fullname='Daniel Calvo'>
    <organization />
</author>

<date month='April' day='19' year='2016' />

<abstract><t>fixed size m (= 256 bits).  But this data structure may be implemented in several different ways, for instance as a set of tables representing the currently relevant parts of the tree.  We use a sequence of integer numbers as indexes for the nodes (values) in the tree.  To avoid parentheses, commas, and semicolons we write for instance: "123" for the sequence of 3 numbers "1", "2", and "3".  In what follows, in all our examples of integer sequences, we will not use numbers that require 2 or more digits (that is, numbers > 9).  The sequences of integers are used to index values in a tree: x_a is the value at the node with position (address) a.  In other words, the nodes (and their values) are denoted as x_a, where a is a sequence of integer numbers.  The tree has a root x (x_a where a = epsilon is the empty sequence).  The children of x are x_1, x_2, x_3, ..., x_N, where k = 1..N is a singleton list, that is a list with only one number.  If x_a is a node in the tree, then the children of x_a all have the form x_a', where a'=a;i is a the concatenation of a and an integer i.  The value x_a'= x_a; i=x_(a;i) is calculated as G(x_a,i). In the case of a hash h:</t></abstract>

</front>

<seriesInfo name='Internet-Draft' value='draft-cuellar-ace-pat-priv-enhanced-authz-tokens-02' />
<format type='TXT'
        target='http://www.ietf.org/internet-drafts/draft-cuellar-ace-pat-priv-enhanced-authz-tokens-02.txt' />
</reference>
